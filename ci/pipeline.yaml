post_failure_to_slack: &post_failure_to_slack
  put: slack-alert
  params:
    channel: '#automation'
    username: 'Concourse'
    icon_emoji: ':airplane:'
    silent: 'true'
    text: |
      :boom: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job #$BUILD_NAME failed>

post_deployment_start_to_slack: &post_deployment_start_to_slack
  put: slack-alert
  params:
    channel: '#automation'
    username: 'Concourse'
    icon_emoji: ':airplane:'
    silent: 'true'
    text_file: lyra.version/current
    text: |
      :airplane_departure: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Started deploying $BUILD_PIPELINE_NAME $TEXT_FILE_CONTENT to $BUILD_JOB_NAME>

post_deployment_end_to_slack: &post_deployment_end_to_slack
  put: slack-alert
  params:
    channel: '#automation'
    username: 'Concourse'
    icon_emoji: ':airplane:'
    silent: 'true'
    text_file: lyra.version/current
    text: |
      :airplane_arriving: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Finished deploying $BUILD_PIPELINE_NAME $TEXT_FILE_CONTENT to $BUILD_JOB_NAME>

groups:
  - name: master
    jobs:
      - build
      - test
      - staging
      - promote
      - eu-de-1
      - eu-ru-1
      - ap-au-1
      - eu-nl-1
      - ap-cn-1
      - ap-jp-1
      - la-br-1
      - na-ca-1
      - na-us-1
      - na-us-3
      - qa-de-1
  - name: cli
    jobs:
      - test-cli
      - build-cli

jobs:
  - name: build
    serial: true
    public: true
    plan:
      - aggregate:
        - get: lyra.git
          trigger: true
        - get: lyra.version
          params: { bump: true }
      - put: lyra.image
        params:
          build: lyra.git/
          dockerfile: lyra.git/docker/Dockerfile
          tag_as_latest: true
          cache: true
          cache_tag: latest
          tag: lyra.version/current
          build_args:
            http_proxy: http://proxy.***REMOVED***:8080
            https_proxy: http://proxy.***REMOVED***:8080
            no_proxy: ***REMOVED***.***REMOVED***,127.0.0.1,localhost
      - put: lyra.version
        params: { filename: lyra.version/current }
    on_failure:
      <<: *post_failure_to_slack
  - name: test
    public: true
    plan:
      - aggregate:
        - get: lyra.image
          passed: [ build ]
        - get: lyra.git
          passed: [ build ]
          trigger: true
        - get: lyra.version
          passed: [ build ]
      - task: rspec
        file: lyra.git/ci/tasks/unit-tests.yaml
        image: lyra.image
    on_failure:
      <<: *post_failure_to_slack

  - name: staging
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          trigger: true
          passed: [ test ]
        - get: lyra.version
          passed: [ test ]
        - get: charts.git
        - get: secrets.git
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: staging
          GITHUB_TOKEN: {{github-access-token}}
      - task: prune replicasets
        file: lyra.git/ci/tasks/prune-replicasets.yaml
        params:
          REGION: staging
          GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack

  - name: promote
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ staging ]
        - get: lyra.version
          passed: [ staging ]
        - get: charts.git
          passed: [ staging ]

  - name: eu-de-1
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: eu-de-1
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: eu-de-1
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack

  - name: qa-de-1
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade-1.7.yaml
        params:
          REGION: qa-de-1
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: qa-de-1
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack

  - name: eu-ru-1
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: eu-ru-1
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: eu-ru-1
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack

  - name: ap-au-1
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: ap-au-1 
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: ap-au-1
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack

  - name: eu-nl-1
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: eu-nl-1 
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: eu-nl-1
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack

  - name: ap-cn-1
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: ap-cn-1
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: ap-cn-1
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack
  - name: ap-jp-1
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: ap-jp-1
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: ap-jp-1
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack
  - name: la-br-1
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: la-br-1
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: la-br-1
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack
  - name: na-ca-1
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: na-ca-1
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: na-ca-1
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack
  - name: na-us-1
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: na-us-1
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: na-us-1
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack
  - name: na-us-3
    serial: true
    plan:
      - aggregate:
        - get: lyra.git
          passed: [ promote ]
          trigger: true
        - get: lyra.version
          passed: [ promote ]
        - get: charts.git
          passed: [ promote ]
        - get: secrets.git
      - <<: *post_deployment_start_to_slack
      - task: deploy
        file: lyra.git/ci/tasks/helm-upgrade.yaml
        params:
          REGION: na-us-3
          GITHUB_TOKEN: {{github-access-token}}
      - aggregate:
        - <<: *post_deployment_end_to_slack
        - task: prune replicasets
          file: lyra.git/ci/tasks/prune-replicasets.yaml
          params:
            REGION: na-us-3
            GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack
  - name: test-cli
    plan:
      - get: cli.git
        trigger: true
      - task: test-cli
        file: cli.git/ci/tests.yml
    on_failure:
      <<: *post_failure_to_slack

  - name: build-cli
    serial: true
    plan:
      - get: cli.git
        passed: [test-cli]
        trigger: true
      - get: cli.version
        params: { bump: true }
      - aggregate:
        - task: build-linux
          file: cli.git/ci/build.yml
          output_mapping: { binary: binary-linux }
        - task: build-windows
          file: cli.git/ci/build.yml
          output_mapping: { binary: binary-windows }
          params: { GOOS: windows }
        - task: build-darwin
          file: cli.git/ci/build-darwin.yml
          output_mapping: { binary: binary-darwin }
      - task: prepare-release
        file: cli.git/ci/prepare-release.yml
      - aggregate:
        - put: cli.version
          params: { filename: cli.version/current }
        - put: cli-release
          params:
            name: release/name
            tag: cli.version/current
            tag_prefix: v
            body: release/body
            commitsh: release/commitsh
            globs: [release/artifacts/*]
    on_failure:
      <<: *post_failure_to_slack


resources:
  - name: lyra.git
    type: git
    source:
      uri: git://gitHub.***REMOVED*** /monsoon/monsoon-automation.git
      branch: master
  - name: charts.git
    type: git
    source:
      uri: https://github.com/sapcc/helm-charts.git
      branch: master
  - name: secrets.git
    type: git
    source:
      uri: git@gitHub.***REMOVED*** :cc/secrets.git
      private_key: {{secrets-ssh-key}}
      branch: master
  - name: lyra.image
    type: docker-image
    source:
      host:       {{docker-registry-host}}
      username:   {{docker-registry-username}}
      password:   {{docker-registry-password}}
      repository: hub.***REMOVED***/monsoon/lyra
  - name: lyra.version
    type: monsoon-version
    source:
      key:  automation
      initial:   "00010101"
      username:  {{swift-username}}
      api_key:   {{swift-api-key}}
      auth_url:  {{swift-auth_url}}
      domain:    {{swift-domain}}
      tenant_id: {{swift-project-id}}
      container: {{swift-container-version}}
  - name: cli.git
    type: git
    source:
      uri: git://gitHub.***REMOVED*** /monsoon/lyra-cli.git
      branch: master
  - name: cli.version
    type: monsoon-version
    source:
      key:  lyra-cli
      initial:   "00010101"
      username:  {{swift-username}}
      api_key:   {{swift-api-key}}
      auth_url:  {{swift-auth_url}}
      domain:    {{swift-domain}}
      tenant_id: {{swift-project-id}}
      container: {{swift-container-version}}
  - name: cli-release
    type: github-release
    source:
      github_api_url: https://gitHub.***REMOVED*** /api/v3/
      github_uploads_url: https://gitHub.***REMOVED*** /api/uploads/
      user: monsoon
      repository: lyra-cli
      access_token: {{github-access-token}}
  - name: slack-alert
    type: slack-notification
    source:
      url: {{slack-webhook-url}}

resource_types:
  - name: monsoon-version
    type: docker-image
    source:
      repository: hub.***REMOVED***/concourse/monsoon-version

  - name: github-release
    type: docker-image
    source:
      repository: hub.***REMOVED***/concourse/github-release-resource

  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
